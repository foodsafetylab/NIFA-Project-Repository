library(tidyverse)
library(ggplot2)
PreHarvest<-read.csv("PreHarvest Trimmed.csv")
View(PreHarvest)
PreHarvest$Sample.Type<-as.factor(PreHarvest$Sample.Type)
PreHarvest$Sample.Type<-as.factor(PreHarvest$Sample.Type)
PreHarvest$Area<-as.factor(PreHarvest$Area)
PreHarvest$Test<-as.factor(PreHarvest$Test)
PreHarvest$Sample_Type<- ifelse(PreHarvest$Sample.Type == "Swab", "Aggregative Swab",
ifelse(PreHarvest$Sample.Type == "Grab", "Composite Produce Sample", "High Resolution Produce Sample"))
PreHarvest$Areas<-ifelse(PreHarvest$Area == "Edge", "Road Edge",
ifelse(PreHarvest$Area == "Bed 1", "Outer Edge", "Center"))
PreHarvest$Sample_Type<-as.factor(PreHarvest$Sample_Type)
PreHarvest$Areas<-as.factor(PreHarvest$Areas)
Pr_ASvCPSvHR_Loc<-ggplot(data= PreHarvest, aes(x=Areas, y=Best.Estimate , col= Sample_Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=18),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Bacterial Recovery Comparison between Locations Sampled")
Pr_ASvCPSvHR_Loc+ facet_grid(.~Test) +labs(col="Sample Type")
Pr_ASvCPSvHR<-ggplot(data= PreHarvest, aes(x=Sample_Type, y=Best.Estimate , col= Test))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=18),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Bacterial Recovery Comparison between Aggregative Swab, Composite Produce and High Resolution Produce Sampling ")
Pr_ASvCPSvHR+ facet_grid(.~Test) +labs(col="Microbiological Test")
Pr_ASvCPSvHR<-ggplot(data= PreHarvest, aes(x=Sample_Type, y=Best.Estimate , col= Test))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=15),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Bacterial Recovery Comparison between Aggregative Swab, Composite Produce and High Resolution Produce Sampling ")
Pr_ASvCPSvHR+ facet_grid(.~Test) +labs(col="Microbiological Test")
save.image("C:/Users/jfq/Box Sync/NIFA Project/NIFA Project Repository/IAFP_Plots.RData")
PreHarvest$Tests<-ifelse(PreHarvest$Test == "APC", "Aerobic Plate Counts", "Coliform Counts")
PreHarvest$Tests<-as.factor(PreHarvest$Tests)
Pr_ASvCPSvHR<-ggplot(data= PreHarvest, aes(x=Sample_Type, y=Best.Estimate , col= Tests))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=15),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Bacterial Recovery Comparison between Aggregative Swab, Composite Produce and High Resolution Produce Sampling ")
Pr_ASvCPSvHR+ facet_grid(.~Test) +labs(col="Microbiological Test")
Pr_ASvCPSvHR_Loc<-ggplot(data= PreHarvest, aes(x=Areas, y=Best.Estimate , col= Sample_Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=18),axis.text.x = element_text(angle=0, hjust=0.5))+
stat_summary(fun.data = PreHarvest, geom = "text", hjust = 0.5) +
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Bacterial Recovery Comparison between Locations Sampled")
Pr_ASvCPSvHR_Loc+ facet_grid(.~Test) +labs(col="Sample Type")
Pr_ASvCPSvHR_Loc<-ggplot(data= PreHarvest, aes(x=Areas, y=Best.Estimate , col= Sample_Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=18),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Bacterial Recovery Comparison between Sampled Field Locations ")
Pr_ASvCPSvHR_Loc+ facet_grid(.~Test) +labs(col="Sample Type")
Pr_ASvCPSvHR<-ggplot(data= PreHarvest, aes(x=Sample_Type, y=Best.Estimate , col= Tests))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=15),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Bacterial Recovery Comparison between Aggregative Swab, Composite Produce and High Resolution Produce Sampling ")
Pr_ASvCPSvHR+ facet_grid(.~Test) +labs(col="Microbiological Test")
Pr_ASvCPSvHR+ facet_grid(.~Test) +labs(x= "Sample Type", col="Microbiological Test")
Pr_ASvCPSvHR_Loc<-ggplot(data= PreHarvest, aes(x=Areas, y=Best.Estimate , col= Sample_Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=20),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("PreHarvest Bacterial Recovery Comparison between Sampled Field Locations ")
Pr_ASvCPSvHR_Loc+ facet_grid(.~Test) +labs(col="Sample Type")
Pr_ASvCPSvHR_Loc<-ggplot(data= PreHarvest, aes(x=Areas, y=Best.Estimate , col= Sample_Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=20),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate (Log CFU/g)", breaks= c(1,2,3,4,5,6,7))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("PreHarvest Bacterial Recovery Comparison between Field Locations")
Pr_ASvCPSvHR_Loc+ facet_grid(.~Test) +labs(col="Sample Type")
load("C:/Users/jfq/Box Sync/NIFA Project/NIFA Project Repository/Field Trials 2022.RData")
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry == "Wet")
#libraries
library(ggplot2)
library(tidyverse)
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry == "Wet")
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry == "WET")
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry != "DRY")
View(adjforWetMT_Fanoe)
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry != "WET")
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry != "DRY")
View(adj_Fanoe)
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry == "DRY"|Wet.dry == NA)
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry == "DRY"|Wet.dry == "NA")
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry == "WET"|Wet.dry == "NA")
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Wet.dry == "WET"|Wet.dry == "")
View(adj_Fanoe)
adjforWetMT_Fanoe<-adj_Fanoe%>% filter(Sample.Type=="Produce Sample"| Wet.dry == "WET")
View(adjforWetMT_Fanoe)
#counts for each factor
MT_Fanoe%>%
count(Zone,Wet.dry,Hand.msd, sort=T)
Adj_OvPH_MTvTissue_APC<-ggplot(data= adjforWetMT_Fanoe, aes(x=Zone, y=Log.APC. , col= Sample.Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=20),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate APC (Log CFU/g)", breaks= c(1,2,3,4,5,6,7,8,9))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest APC Recovery Comparison - Aggregative Swab v Composite Produce Samples")
Adj_OvPH_MTvTissue_APC
Adj_OvPH_MTvTissue_Colif<-ggplot(data= adjforWetMT_Fanoe, aes(x=Zone, y=Log.Coli. , col= Sample.Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=20),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate Coliforms (Log CFU/g)", breaks= c(1,2,3,4,5,6,7,8,9))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Coliform Recovery Comparison - Aggregative Swab v Composite Produce Samples")
Adj_OvPH_MTvTissue_Colif
Adj_OvPH_MTvTissue_APC<-ggplot(data= adjforWetMT_Fanoe, aes(x=Zone, y=Log.APC. , col= Sample.Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=16),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate APC (Log CFU/g)", breaks= c(1,2,3,4,5,6,7,8,9))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest APC Recovery Comparison - Aggregative Swab v Composite Produce Samples")
Adj_OvPH_MTvTissue_APC
Adj_OvPH_MTvTissue_Colif<-ggplot(data= adjforWetMT_Fanoe, aes(x=Zone, y=Log.Coli. , col= Sample.Type))+
geom_boxplot(outlier.alpha = 0)+theme(text = element_text(size=16),axis.text.x = element_text(angle=0, hjust=0.5))+
expand_limits(y=0)+
scale_y_continuous("Best Estimate Coliforms (Log CFU/g)", breaks= c(1,2,3,4,5,6,7,8,9))+
geom_point(position=position_jitterdodge(),alpha=1)+
ggtitle("Overall PreHarvest Coliform Recovery Comparison - Aggregative Swab v Composite Produce Samples")
Adj_OvPH_MTvTissue_Colif
adj_Fanoe%>%
count(Log.E.coli.)
adj_Fanoe%>%
count(Sample.Type)
var.test(Log.APC. ~ Sample_Type, data=adjforWetMT_Fanoe)
var.test(Log.APC. ~ Sample.Type, data=adjforWetMT_Fanoe)
var.test(Log.Coli. ~ Sample.Type, data=adjforWetMT_Fanoe)
var(adjforWetMT_Fanoe$Log.APC.)
#for variance
AggS<-adjforWetMT_Fanoe%>%
filter(Sample.Type == "Aggregative Swab")
CPr<-adjforWetMT_Fanoe%>%
filter(Sample.Type=="Produce Sample")
var(AggS$Log.APC.)
var(AggS$Log.Coli.)
view(df)
df
df<-data.frame(Sample.Type = c("Aggregative Swab", "Produce Sample"),
df<-data.frame(Sample.Type = c("Aggregative Swab", "Produce Sample"),
Salmonella.Test.Result=(rep("Positive", "Negative"), times = c(20, 31)))
df<-data.frame(Sample.Type = c("Aggregative Swab", "Produce Sample"),
Salmonella.Test.Result=repc(("Positive", "Negative"), times = c(20, 31)))
df<-data.frame(Sample.Type = c("Aggregative Swab", "Produce Sample"),
Salmonella.Test.Result=rep(c("Positive" "Negative"), times = c(20, 31)))
df<-data.frame(Sample.Type = c("Aggregative Swab", "Produce Sample"),
Salmonella.Test.Result=rep(c("Positive", "Negative"), times = c(20, 31)))
df<-data.frame(Sample.Type = rep(c("Aggregative Swab", "Produce Sample"), times=c(25,26),
df<-data.frame(Sample.Type = rep(c("Aggregative Swab", "Produce Sample"), times=c(25,26),
Salmonella.Test.Result=rep(c("Positive", "Negative"), times = c(20, 31))))
df
library(tidyverse)
view(df)
df<-data.frame(Sample.Type = rep(c("Aggregative Swab", "Produce Sample"), times=c(25,26), Salmonella.Test.Result=rep(c("Positive", "Negative"), times = c(20, 31))))
view(df)
df$Salmonella.Test.Result<-data.frame(Salmonella.Test.Result=rep(c("Positive", "Negative"), times = c(20, 31)))
view(df)
df$Salmonella.Test.Result<-data.frame(rep(c("Positive", "Negative"), times = c(20, 31)))
view(df)
df$Salmonella.Test.Result<-df$Salmonella.Test.Result(data.frame(rep(c("Positive", "Negative"), times = c(20, 31)))
df$Salmonella.Test.Result<-df$Salmonella.Test.Result(data.frame(rep(c("Positive", "Negative"), times = c(20, 31))))
df<-data.frame(Salmonella.test=rep(c("Positive", "Negative"), times = c(20, 31))))
df<-data.frame(Salmonella.test=rep(c("Positive", "Negative"), times = c(20, 31)))
view(df)
df<-data.frame(Sample.Type = rep(c("Aggregative Swab", "Produce Sample"), times=c(25,26), Salmonella.Test.Result=rep(c("Positive", "Negative"), times = c(20, 31))))
df$Salmonella.Test<-data.frame(Salmonella.test=rep(c("Positive", "Negative"), times = c(20, 31)))
view(df)
df$Salmonella.Test<-data.frame(Salmonella.test=rep(c("Positive", "Negative","Positive" "Negative"), times = c(13,12,7,19)))
df$Salmonella.Test<-data.frame(Salmonella.test=rep(c("Positive", "Negative","Positive", "Negative"), times = c(13,12,7,19)))
view(df)
table(df$Sample.Type, df$Salmonella.Test)
df$Salmonella.Test<-Salmonella.test=rep(c("Positive", "Negative","Positive", "Negative"), times = c(13,12,7,19)))
df$Salmonella.Test<-Salmonella.test=rep(c("Positive", "Negative","Positive", "Negative"), times = c(13,12,7,19))
view(df)
df$Salmonella.Test<-(Salmonella.test=rep(c("Positive", "Negative","Positive", "Negative"), times = c(13,12,7,19)))
view(df)
table(df$Sample.Type, df$Salmonella.Test)
conttable<-table(df$Sample.Type, df$Salmonella.Test)
addmargins(conttable)
TrialContTable<-addmargins(conttable)
chisq.test(TrialContTable)
fisher.test(TrialContTable)
library(ISLR2)
Boston_data<-ISLR2::Boston
Boston_data<-ISLR2::Boston
trn_Boston<-sample(nrow(Boston_data), size= 0.8*nrow(Boston_data))
trn_Boston<-sample(c(TRUE, FALSE), nrow(Boston_data), replace=T, prob=c(0.8, 0.3))
set.seed(43231)
trn_Boston<-sample(c(TRUE, FALSE), nrow(Boston_data), replace=T, prob=c(0.8, 0.3))
set.seed(43231)
Sample_Boston<-sample(c(TRUE, FALSE), nrow(Boston_data), replace=T, prob=c(0.8, 0.3))
trn_Boston<-Boston_data[Sample_Boston,]
tst_Boston<-Boston_data[!Sample_Boston,]
set.seed(43231)
Sample_Boston<-sample(c(TRUE, FALSE), nrow(Boston_data), replace=T, prob=c(0.8, 0.3))
trn_Boston<-Boston_data[Sample_Boston,]
tst_Boston<-Boston_data[!Sample_Boston,]
mean(trn_Boston)
mean(trn_Boston$crim)
mean(tst_Boston$crim)
set.seed(43231)
Sample_Boston<-sample(c(TRUE, FALSE), nrow(Boston_data), replace=T, prob=c(0.8, 0.2))
trn_Boston<-Boston_data[Sample_Boston,]
tst_Boston<-Boston_data[!Sample_Boston,]
mean(trn_Boston$crim)
mean(tst_Boston$crim)
print(mean(tst_Boston$crim))
View(Boston_data)
View(Boston_data)
tempdir()
dir.create(tempdir())
library(leaps)
install.packages("leaps")
library(leaps)
fit_Boston<-regsubsets(crim~., data = trn_Boston)
View(fit_Boston)
coef(fit_Boston)
print(fit_Boston)
summary(fit_Boston)
fit_Boston_summ<-summary(fit_Boston)
names(fit_Boston_summ)
which.min(fit_Boston_summ$bic)
fit_Boston_summ$bic
which.max(fit_Boston_summ$bic)
which.min(fit_Boston_summ$bic)
fit_Boston<-regsubsets(crim~., data = trn_Boston)
fit_Boston_summ<-summary(fit_Boston)
fit_Boston_summ$bic
which.min(fit_Boston_summ$bic)
save.image("C:/Users/jfq/Box Sync/Class/PhD/Fall 2022/Stat 432/Data_HW3.RData")
